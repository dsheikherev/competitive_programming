// –í—ã–≤–µ–¥–∏—Ç–µ –≤—Å–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ —Å–∫–æ–±–æ—á–Ω—ã–µ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ —Å –¥–≤—É–º—è —Ç–∏–ø–∞–º–∏ —Å–∫–æ–±–æ–∫ ‚Äò(‚Äô, ‚Äò)‚Äô, ‚Äò[‚Äò, ‚Äò]‚Äô, —Å–æ–¥–µ—Ä–∂–∞—â–∏–µ 2ùëõ
// 2n —Å–∫–æ–±–æ–∫, –≤ –ª–µ–∫—Å–∏–∫–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–æ–º –ø–æ—Ä—è–¥–∫–µ. –í –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –º–æ–≥—É—Ç –≤—Å—Ç—Ä–µ—á–∞—Ç—å—Å—è –æ–±–∞ —Ç–∏–ø–∞ —Å–∫–æ–±–æ–∫ –∏–ª–∏ —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω –∏–∑ –Ω–∏—Ö.

// –í—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
// –ù–∞—Ç—É—Ä–∞–ª—å–Ω–æ–µ —á–∏—Å–ª–æ n.

// –í—ã—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
// –í—ã–≤–µ–¥–∏—Ç–µ –≤—Å–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ —Å–∫–æ–±–æ—á–Ω—ã–µ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –≤ –ª–µ–∫—Å–∏–∫–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–æ–º –ø–æ—Ä—è–¥–∫–µ, –∫–∞–∂–¥—É—é –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å - –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–π —Å—Ç—Ä–æ–∫–µ, –±–µ–∑ –ø—Ä–æ–±–µ–ª–æ–≤.
// –°—á–∏—Ç–∞–π—Ç–µ, —á—Ç–æ ‚Äò(‚Äô < ‚Äò)‚Äô < ‚Äò[‚Äò < ‚Äò]‚Äô.

// –ü—Ä–∏–º–µ—Ä –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö:
// 2
// –ü—Ä–∏–º–µ—Ä –≤—ã—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö:
// (())
// ()()
// ()[]
// ([])
// [()]
// [[]]
// []()
// [][]

#include <iostream>
#include <stack>
#include <string>

using namespace std;

int n = 2, c = 1;
string a;

bool check() {
	stack<char> s;
	for(char& x : a)
		if(x == '(' || x == '[')
			s.push(x);
		else
			if((x == ')' && s.top() == '(') || (x == ']' && s.top() == '[')) 
				s.pop();
			else 
				return false;
	return true;
}

void rec(int idx, int bal1, int bal2) {
	if(idx == 2 * n) {
		if(bal1 == 0 && bal2 == 0 && check())
			cout << c++ << ": " << a << endl;
	} else {
		if(bal1 < n) {
			a[idx] = '('; 
			rec(idx + 1, bal1 + 1, bal2);
		}
		if(bal1 > 0) {
			a[idx] = ')'; 
			rec(idx + 1, bal1 - 1, bal2);
		}
		if(bal2 < n) {
			a[idx] = '['; 
			rec(idx + 1, bal1, bal2 + 1);
		}
		if(bal2 > 0) {
			a[idx] = ']'; 
			rec(idx + 1, bal1, bal2 - 1);
		}
	}
}

int main()
{
	a.resize(2 * n);
	rec(0, 0, 0);
}